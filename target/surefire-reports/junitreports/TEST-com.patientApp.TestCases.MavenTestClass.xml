<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="2" hostname="DESKTOP-FGT58SB" name="com.patientApp.TestCases.MavenTestClass" tests="4" failures="0" timestamp="11 Sep 2018 07:21:48 GMT" time="148.286" errors="1">
  <testcase name="updatingTheProfile" time="49.043" classname="com.patientApp.TestCases.MavenTestClass"/>
  <testcase name="whatWeTreat" time="38.536" classname="com.patientApp.TestCases.MavenTestClass">
    <skipped/>
  </testcase> <!-- whatWeTreat -->
  <testcase name="whatWeTreat" time="36.963" classname="com.patientApp.TestCases.MavenTestClass">
    <error type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: read ECONNRESET (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &#039;3.11.0&#039;, revision: &#039;e59cfb3&#039;, time: &#039;2018-03-11T20:26:55.152Z&#039;
System info: host: &#039;DESKTOP-FGT58SB&#039;, ip: &#039;192.168.2.77&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_161&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.docsapp.patients.app.Ma..., appPackage: com.docsapp.patients.debug, automationName: uiautomator2, browserName: android, databaseEnabled: false, desired: {appActivity: com.docsapp.patients.app.Ma..., appPackage: com.docsapp.patients.debug, automationName: uiautomator2, browserName: android, device: Android, deviceName: Android, newCommandTimeout: 60, noReset: true, orientation: PORTRAIT, platform: ANDROID, platformName: Android, skipUnlock: true, version: }, device: Android, deviceApiLevel: 27, deviceManufacturer: Xiaomi, deviceModel: Mi A1, deviceName: 797a9b000504, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: 797a9b000504, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 60, noReset: true, orientation: PORTRAIT, pixelRatio: 3, platform: ANDROID, platformName: ANDROID, platformVersion: 8.1.0, skipUnlock: true, statBarHeight: 72, takesScreenshot: true, version: , viewportRect: {height: 1848, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 22c39f5e-3763-49e0-a59c-71cfe02023c1
*** Element info: {Using=xpath, value=//android.widget.LinearLayout[@index=&#039;0&#039;]/android.widget.LinearLayout/android.widget.LinearLayout[@index=&#039;1&#039;]/android.widget.TextView}">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: read ECONNRESET (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'DESKTOP-FGT58SB', ip: '192.168.2.77', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.docsapp.patients.app.Ma..., appPackage: com.docsapp.patients.debug, automationName: uiautomator2, browserName: android, databaseEnabled: false, desired: {appActivity: com.docsapp.patients.app.Ma..., appPackage: com.docsapp.patients.debug, automationName: uiautomator2, browserName: android, device: Android, deviceName: Android, newCommandTimeout: 60, noReset: true, orientation: PORTRAIT, platform: ANDROID, platformName: Android, skipUnlock: true, version: }, device: Android, deviceApiLevel: 27, deviceManufacturer: Xiaomi, deviceModel: Mi A1, deviceName: 797a9b000504, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: 797a9b000504, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 60, noReset: true, orientation: PORTRAIT, pixelRatio: 3, platform: ANDROID, platformName: ANDROID, platformVersion: 8.1.0, skipUnlock: true, statBarHeight: 72, takesScreenshot: true, version: , viewportRect: {height: 1848, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 22c39f5e-3763-49e0-a59c-71cfe02023c1
*** Element info: {Using=xpath, value=//android.widget.LinearLayout[@index='0']/android.widget.LinearLayout/android.widget.LinearLayout[@index='1']/android.widget.TextView}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:346)
at io.appium.java_client.DefaultGenericMobileDriver.findElements(DefaultGenericMobileDriver.java:54)
at io.appium.java_client.AppiumDriver.findElements(AppiumDriver.java:149)
at org.openqa.selenium.remote.RemoteWebDriver.findElementsByXPath(RemoteWebDriver.java:425)
at io.appium.java_client.DefaultGenericMobileDriver.findElementsByXPath(DefaultGenericMobileDriver.java:144)
at io.appium.java_client.AppiumDriver.findElementsByXPath(AppiumDriver.java:181)
at org.openqa.selenium.By$ByXPath.findElements(By.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:307)
at io.appium.java_client.DefaultGenericMobileDriver.findElements(DefaultGenericMobileDriver.java:50)
at io.appium.java_client.AppiumDriver.findElements(AppiumDriver.java:145)
at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:183)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:180)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
at com.patientApp.Base.MavenGenericMethods.whatWeTreatHam(MavenGenericMethods.java:1044)
at com.patientApp.TestCases.MavenTestClass.whatWeTreat(MavenTestClass.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
    </error>
  </testcase> <!-- whatWeTreat -->
  <testcase name="whatWeTreat" time="23.744" classname="com.patientApp.TestCases.MavenTestClass">
    <skipped/>
  </testcase> <!-- whatWeTreat -->
</testsuite> <!-- com.patientApp.TestCases.MavenTestClass -->
